@startuml
title MVP-PV

package Models {
    class Game {
        board: Board
        black_player: Player
        red_player: Player
        turn: Optional[Player]
        goal: int

        is_end() -> bool
    }

    class Board {
        points: list[Point]
        off_board: list[Piece]
        bar: list[Piece]

        is_all_piece_last_square(color: Color) -> bool
        is_pieces_in_bar(color: Color) -> bool
        is_all_pieces_off_board(color: Color) -> bool
        is_any_piece_off_board(color: Color) -> bool
        is_any_piece_at_home(color: Color) -> bool
        move_piece(position: Position, position: Position, color: Color)
        reset()
    }

    class DoublingCube {
        value: int  # 2^1 .. 2^6
    }

    class Player {
        last_roll: list[Dice]
        last_moves: list[Move]
        score: int
        doubling_cube: bool = False

        roll(times: int)
        can_bet() -> bool
        bet()
        accept_bet()
        reject_bet()
        is_winner()
        earn_score(score: int)
    }

    class Dice {
        value: int  # between 1..6
        __init__()  # constructor
    }

    class Turn {
        current_player: Player = None
        get_next_player(default=None): Player
    }
}

package Controllers {
    class ConfigureMatchPlay
    class RollDice
    class MovePiece
    class Bet
}

package Views {
    class EndGameView {
        show()
    }

    class MenuView {
        show()
        read()
    }

    class ConfigurationMatchPlayView {
        show()
        read()  # read input
    }

    class BoardView {
        show(color: Color)
    }

    class DiceView {
        show()
    }

    class BetView {
        show()
        read()
    }

    class PlayerView {
        show()
    }

    MenuView --> BoardView
    MenuView --> PlayerView
    MenuView --> DiceView
    MenuView --> BetView
}

package Types {
    enum Color {
        RED
        BLACK
    }

    enum Point {
        1..24
    }
}

@enduml
